package com.qst.chapter07;

import java.text.DateFormat;
import java.util.Date;
import java.util.Locale;
//补充：使用DateFormat来进行日期格式化	
//为什么？因为每个国家日期格式是不同的。我们也需要根据不同的Locale来格式化日期。
//步骤：1.创建相应的格式器。2.使用格式器来格式化数据。
public class DateFormatDemo {

	public static void print(Date date, Locale locale) {
		// 得到对应Locale对象的日期格式化对象
		DateFormat df1 = DateFormat.getDateTimeInstance(DateFormat.FULL,
				DateFormat.FULL, locale);
		DateFormat df2 = DateFormat.getDateTimeInstance(DateFormat.LONG,
				DateFormat.LONG, locale);
		DateFormat df3 = DateFormat.getDateTimeInstance(DateFormat.DEFAULT,
				DateFormat.DEFAULT, locale);
		DateFormat df4 = DateFormat.getDateTimeInstance(DateFormat.SHORT,
				DateFormat.SHORT, locale);
		// 格式化日期输出
		System.out.println(df1.format(date));
		System.out.println(df2.format(date));
		System.out.println(df3.format(date));
		System.out.println(df4.format(date));
	}

	public static void main(String[] args) {
		//补充：创建一个Date对象 表示现在的时间。
		Date now = new Date();
		Locale cnLocale = new Locale("zh", "CN");
		Locale usLocale = new Locale("en", "US");
		System.out.println("中文格式：");
		print(now, cnLocale);
		System.out.println("英文格式：");
		print(now, usLocale);
	}

}
